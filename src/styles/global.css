@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined");

@import url("https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:wght@400;700&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Martian+Mono&display=swap");

@layer global {
  :root {
    --color-bg: rgb(22 22 30);
    --color-bg-1: rgb(50 50 60);
    /* Name is not too clear. Some elements use this as the background color */
    --color-bg-element: rgb(15 15 18);
    --color-fg: rgb(245 245 255);
    --color-danger: #ec6c84;
    --color-anchor: #00b3ff;

    --font-default: "Atkinson Hyperlegible", sans-serif;
    --font-code: "Martian Mono", monospace;

    --border-radius: 16px;

    --button-border-radius: 8px;

    /* Interpolates font-size from 12px to 16px
     * based on the following steps:
     * 12px at 280px viewport width
     * 14px at 480px viewport width
     * 16px at 768px viewport width
     */
    font-size: max(12px, 9.2px + 1vw);
    @media screen and (min-width: 480px) {
      font-size: min(16px, 10.67px + 0.69vw);
    }
  }

  * {
    margin: 0;
    padding: 0;
  }

  a {
    &.button {
      text-decoration: none;
    }

    &:not(.button) {
      color: var(--color-anchor);

      &:visited {
        color: var(--color-anchor);
      }
    }
  }

  body {
    background-color: var(--color-bg);
    color: var(--color-fg);
    color-scheme: only dark;
    font-family: var(--font-default);
  }

  button,
  .button {
    background-color: var(--color-bg-1);
    border-radius: var(--button-border-radius);
    border: none;
    color: inherit;
    cursor: pointer;
    display: block;
    padding: 8px 16px;

    &:hover {
      opacity: 0.8;
    }
  }

  code {
    font-family: var(--font-code);
    font-size: 0.8em;
  }

  label {
    &:has(input[type="text"]) input {
      background: none;
      border: none;
      color: inherit;
      display: block;
      font-family: var(--font-code);
      font-size: 0.8em;
      margin-top: 0.5ch;
      padding: 0.5ch 1ch;
      border-radius: calc(var(--border-radius) / 2);
    }
  }

  table {
    background: var(--color-bg-element);
    border-collapse: collapse;
    border-radius: var(--border-radius);
    overflow: hidden; /* So the odd child bg doesn't overflow */

    tbody {
      tr {
        &:nth-child(odd) {
          background-color: rgb(255 255 255 / 0.05);
        }
      }
    }

    td {
      padding: 0.25ch 1ch;
    }

    th {
      padding: 0.5ch 1ch;
    }
  }

  pre {
    &:has(code) {
      background-color: var(--color-bg-element);
      border-radius: var(--border-radius);
      box-sizing: border-box;
      color: rgb(150 150 160);
      overflow: auto;
      padding: 8px 16px;
      width: 100%;
      max-width: fit-content;

      .hljs-comment {
        color: rgb(80 80 90);
      }

      .hljs-built_in,
      .hljs-keyword,
      .hljs-number {
        color: rgb(245 245 255);
      }
    }
  }

  small {
    opacity: 0.5;
  }

  summary {
    user-select: none;
  }

  .card {
    background-color: var(--color-bg-1);
    border-radius: var(--border-radius);
    padding: 8px 16px;
  }

  .material-symbols-outlined {
    user-select: none;
  }
}
